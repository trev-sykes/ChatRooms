generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  username       String    @unique
  email          String?   @unique
  password       String?
  googleId       String?   @unique
  profilePicture String?
  role           UserRole  @default(USER)
  isDiscoverable Boolean   @default(true) // üîç Can appear in search?
  bio            String? // üß† Optional
  lastSeen       DateTime? // ‚è±Ô∏è For activity
  isOnline       Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now()) @updatedAt

  messages             Message[]
  conversations        UserConversation[]
  createdConversations Conversation[]     @relation("CreatedConversations")
}

// üåç Enum for system-level roles
enum UserRole {
  USER
  ADMIN
  MODERATOR
}

model Conversation {
  id        Int      @id @default(autoincrement())
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // optional: track who created the conversation
  createdById Int?
  createdBy   User? @relation("CreatedConversations", fields: [createdById], references: [id])

  messages Message[]
  users    UserConversation[]

  @@index([createdAt])
}

model UserConversation {
  id             Int @id @default(autoincrement())
  userId         Int
  conversationId Int

  // üõ°Ô∏è Conversation-level role
  role     ConversationRole @default(MEMBER)
  joinedAt DateTime         @default(now())

  user         User         @relation(fields: [userId], references: [id])
  conversation Conversation @relation(fields: [conversationId], references: [id])

  @@unique([userId, conversationId])
  @@index([conversationId])
  @@index([userId])
}

// üé≠ Enum for chat-level roles
enum ConversationRole {
  OWNER
  ADMIN
  MEMBER
}

model Message {
  id        Int         @id @default(autoincrement())
  text      String
  type      MessageType @default(TEXT)
  createdAt DateTime    @default(now())

  senderId       Int
  conversationId Int

  sender       User         @relation(fields: [senderId], references: [id])
  conversation Conversation @relation(fields: [conversationId], references: [id])

  @@index([conversationId])
  @@index([createdAt])
}

// üìú Enum for message content types
enum MessageType {
  TEXT
  IMAGE
  FILE
}
